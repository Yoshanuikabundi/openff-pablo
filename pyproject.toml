[build-system]
requires = [
  "setuptools >= 40.9.0",
  "versioningit",
  "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "openff-pablo"
description = "New, independent implementation of `Topology.from_pdb`"
license = { file = "LICENSE" }
authors = [
  { name = "Josh Mitchell", email = "josh.mitchell@openforcefield.org" },
]
maintainers = [
  { name = "Josh Mitchell", email = "josh.mitchell@openforcefield.org" },
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
]
keywords = [
  "molecular mechanics",
]
dynamic = [
  "version",
]

[project.urls]
source = "https://github.com/openforcefield/openff-pablo"
documentation = "https://openff-pablo.readthedocs.io"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64", "osx-64"]

[tool.pixi.dependencies]
openff-toolkit-base = ">=0.14.7"
rdkit = "*"
openmm = "*"
numpy = "*"

[tool.pixi.pypi-dependencies]
openff-pablo = { path = ".", editable = true }
# openff-toolkit = { git = "https://github.com/openforcefield/openff-toolkit.git", rev = "better_typing" }
# openff-units = { git = "https://github.com/openforcefield/openff-units.git", rev = "better_typing" }

[tool.pixi.feature.test.dependencies]
pytest = "*"
pytest-xdist = "*"
pytest-cov = "*"
codecov = "*"

[tool.pixi.feature.test.tasks.test]
cmd = "pytest -n auto"
cwd = "."

[tool.pixi.feature.test.tasks.fasttest]
cmd = "pytest -n auto -m 'not slow'"
cwd = "."

[tool.pixi.feature.test.tasks.doctest]
cmd = "pytest -n auto --doctest-glob 'docs/*.md' --doctest-glob 'docs/*.rst' --doctest-modules --ignore openff/pablo/_tests/ --ignore-glob docs/*.py openff/ docs/"
cwd = "."

[tool.pixi.feature.doc.dependencies]
myst-parser = "*"
sphinx = "==6.1.2"
sphinx-notfound-page = "*"
autodoc-pydantic = "*"
sphinx-click = "*"

[tool.pixi.feature.doc.pypi-dependencies]
openff-sphinx-theme = { git = "https://github.com/openforcefield/openff-sphinx-theme.git", rev = "main" }

[tool.pixi.feature.doc.tasks.doc]
cmd = "sphinx-build -j auto docs docs/_build/html"
cwd = "."

[tool.pixi.feature.doc.tasks.watchdoc]
cmd = "watchexec --on-busy-update restart -w openff -w docs --print-events 'sphinx-build -j auto docs docs/_build/html'"
cwd = "."

[tool.pixi.feature.example.dependencies]
jupyterlab = ">=4"
ipywidgets = ">=8"
jupyterlab_execute_time = "*"
jupyterlab-lsp = "*"
jupyterlab_rise = "*"
jedi-language-server = "*"
jupyterlab_code_formatter = "*"
black = "*"
isort = "*"
snakeviz = "*"
nglview = ">=3.0.6,<3.1.0"

[tool.pixi.feature.example.tasks.lab]
cmd = "jupyter lab"
cwd = "examples"

[tool.pixi.feature.lint.dependencies]
basedpyright = "*"
ruff = "*"

[tool.pixi.environments]
test = { features = ["lint", "test"], solve-group = "default" }
doc = { features = ["doc"], solve-group = "default" }
example = { features = ["example"], solve-group = "default" }
lint = { features = ["lint"], no-default-feature = true, solve-group = "default" }

[tool.versioningit]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
  "openff/pablo/_tests",
]
markers = [
  "slow: mark the test to be skippable when fast results are needed", #  deselect with `-m "not slow"`
]

[tool.setuptools.packages.find]
include = ["openff.*"]

[tool.pyright]
include = ["openff"]
exclude = [
  ".soap",
  "docs",
  "examples",
]
typeCheckingMode = "strict"

reportUnsupportedDunderAll = "error"
reportUnknownVariableType = "warning"
reportUnknownParameterType = "error"
reportUnknownArgumentType = "warning"
reportUnknownLambdaType = "warning"
reportUnknownMemberType = "warning"
reportAny = "information"
reportMissingTypeStubs = "none"
reportUnnecessaryIsInstance = "none"
reportUnnecessaryTypeIgnoreComment = "error"
reportPrivateUsage = "information"

strictGenericNarrowing = true

[tool.ruff]
namespace-packages = ["openff/pablo/"]

[tool.ruff.lint.isort]
known-third-party = ["openff.toolkit", "openff.utilities", "openff.units"]
known-first-party = ["openff.pablo"]
